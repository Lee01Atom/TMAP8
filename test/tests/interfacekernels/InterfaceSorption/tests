#These tests currently only run in replicated mesh mode, since the BreakMeshByBlockGenerator
#is currently only supported for replicated meshes
[Tests]
  design = 'InterfaceSorption.md'
  issues = '#50 #156'
  [Sievert_non_ad]
    requirement = 'The system shall have the capability to enforce interfacial conditions based on the Sievert law in isothermal conditions.'
    type = 'Exodiff'
    input = 'interface_sorption.i'
    cli_args = 'Outputs/file_base=interface_sorption_Sievert_out'
    exodiff = 'interface_sorption_Sievert_out.e'
    abs_zero = 1e-7
    mesh_mode = REPLICATED
  []
  [Sievert_non_ad_penalty]
    requirement = 'The system shall have the capability to enforce interfacial conditions based on the Sievert law in isothermal conditions using a penalty-enforced flux balance.'
    type = 'Exodiff'
    input = 'interface_sorption.i'
    cli_args = 'InterfaceKernels/interface/use_flux_penalty=true
                InterfaceKernels/interface/flux_penalty=1e5
                Outputs/file_base=interface_sorption_Sievert_out'
    exodiff = 'interface_sorption_Sievert_out.e'
    prereq = Sievert_non_ad
    abs_zero = 1e-7
    mesh_mode = REPLICATED
  []
  [Sievert_ad]
    requirement = 'The system shall have the capability to enforce interfacial conditions based on the Sievert law in isothermal conditions using automatic differentiation.'
    type = 'Exodiff'
    input = 'interface_sorption.i'
    cli_args = 'Kernels/u1/type=ADMatDiffusion
                Kernels/u2/type=ADMatDiffusion
                Kernels/temperature/type=ADHeatConduction
                InterfaceKernels/interface/type=ADInterfaceSorption
                Materials/properties_1/type=ADGenericConstantMaterial
                Materials/properties_1/type=ADGenericConstantMaterial
                Materials/properties_2/type=ADGenericConstantMaterial
                Postprocessors/flux_inner/type=ADSideDiffusiveFluxIntegral
                Postprocessors/flux_outer/type=ADSideDiffusiveFluxIntegral
                Outputs/file_base=interface_sorption_Sievert_out'
    exodiff = 'interface_sorption_Sievert_out.e'
    prereq = Sievert_non_ad
    abs_zero = 1e-7
    mesh_mode = REPLICATED
  []
  [Sievert_ad_penalty]
    requirement = 'The system shall have the capability to enforce interfacial conditions based on the Sievert law in isothermal conditions using automatic differentiation and a penalty-enforced flux balance.'
    type = 'Exodiff'
    input = 'interface_sorption.i'
    cli_args = 'Kernels/u1/type=ADMatDiffusion
                Kernels/u2/type=ADMatDiffusion
                Kernels/temperature/type=ADHeatConduction
                InterfaceKernels/interface/type=ADInterfaceSorption
                InterfaceKernels/interface/use_flux_penalty=true
                InterfaceKernels/interface/flux_penalty=1e5
                Materials/properties_1/type=ADGenericConstantMaterial
                Materials/properties_2/type=ADGenericConstantMaterial
                Postprocessors/flux_inner/type=ADSideDiffusiveFluxIntegral
                Postprocessors/flux_outer/type=ADSideDiffusiveFluxIntegral
                Outputs/file_base=interface_sorption_Sievert_out'
    exodiff = 'interface_sorption_Sievert_out.e'
    prereq = Sievert_ad
    abs_zero = 1e-7
    mesh_mode = REPLICATED
  []

  [Henry_non_ad]
    requirement = 'The system shall have the capability to enforce interfacial conditions based on the Henry law in isothermal conditions.'
    type = 'Exodiff'
    input = 'interface_sorption.i'
    cli_args = 'InterfaceKernels/interface/n_sorption=1 Outputs/file_base=interface_sorption_Henry_out'
    exodiff = 'interface_sorption_Henry_out.e'
    abs_zero = 1e-7
    mesh_mode = REPLICATED
  []
  [Henry_non_ad_penalty]
    requirement = 'The system shall have the capability to enforce interfacial conditions based on the Henry law in isothermal conditions using a penalty-enforced flux balance.'
    type = 'Exodiff'
    input = 'interface_sorption.i'
    cli_args = 'InterfaceKernels/interface/use_flux_penalty=true
                InterfaceKernels/interface/flux_penalty=1e5
                InterfaceKernels/interface/n_sorption=1
                Outputs/file_base=interface_sorption_Henry_out'
    exodiff = 'interface_sorption_Henry_out.e'
    prereq = Henry_non_ad
    abs_zero = 1e-7
    mesh_mode = REPLICATED
  []
  [Henry_ad]
    requirement = 'The system shall have the capability to enforce interfacial conditions based on the Henry law in isothermal conditions using automatic differentiation.'
    type = 'Exodiff'
    input = 'interface_sorption.i'
    cli_args = 'Kernels/u1/type=ADMatDiffusion
                Kernels/u2/type=ADMatDiffusion
                Kernels/temperature/type=ADHeatConduction
                InterfaceKernels/interface/type=ADInterfaceSorption
                InterfaceKernels/interface/n_sorption=1
                Materials/properties_1/type=ADGenericConstantMaterial
                Materials/properties_1/type=ADGenericConstantMaterial
                Materials/properties_2/type=ADGenericConstantMaterial
                Postprocessors/flux_inner/type=ADSideDiffusiveFluxIntegral
                Postprocessors/flux_outer/type=ADSideDiffusiveFluxIntegral
                Outputs/file_base=interface_sorption_Henry_out'
    exodiff = 'interface_sorption_Henry_out.e'
    prereq = Henry_non_ad
    abs_zero = 1e-7
    mesh_mode = REPLICATED
  []
  [Henry_ad_penalty]
    requirement = 'The system shall have the capability to enforce interfacial conditions based on the Henry law in isothermal conditions using automatic differentiation and a penalty-enforced flux balance.'
    type = 'Exodiff'
    input = 'interface_sorption.i'
    cli_args = 'Kernels/u1/type=ADMatDiffusion
                Kernels/u2/type=ADMatDiffusion
                Kernels/temperature/type=ADHeatConduction
                InterfaceKernels/interface/type=ADInterfaceSorption
                InterfaceKernels/interface/n_sorption=1
                InterfaceKernels/interface/use_flux_penalty=true
                InterfaceKernels/interface/flux_penalty=1e5
                Materials/properties_1/type=ADGenericConstantMaterial
                Materials/properties_2/type=ADGenericConstantMaterial
                Postprocessors/flux_inner/type=ADSideDiffusiveFluxIntegral
                Postprocessors/flux_outer/type=ADSideDiffusiveFluxIntegral
                Outputs/file_base=interface_sorption_Henry_out'
    exodiff = 'interface_sorption_Henry_out.e'
    prereq = Henry_ad
    abs_zero = 1e-7
    mesh_mode = REPLICATED
  []
[]
